(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var fixedHeaderWhenScroll = function fixedHeaderWhenScroll() {
  var header = document.querySelector('header');

  if (window.pageYOffset > header.offsetHeight) {
    header.classList.add('hvh-scrolled');
  } else {
    header.classList.remove('hvh-scrolled');
  }
};

var headerVerify = function headerVerify(isInverted, isLogin) {
  if (isInverted == 'true') {
    document.querySelector('.hvh-main-header').classList.add('hvh-inverted');
  }

  if (isLogin == 'true') {
    document.querySelector('.hvh-main-header').classList.add('logged');
  }
};

var pageVerify = function pageVerify() {
  var blockData = document.querySelector('#page-verify-template');

  if (blockData) {
    var isInverted = blockData.getAttribute('header-inverted');
    var isLogin = blockData.getAttribute('is-login'); //ACTION

    headerVerify(isInverted, isLogin);
  }
};

window.addEventListener('load', function (e) {
  pageVerify();
  fixedHeaderWhenScroll();
});
window.addEventListener('scroll', function (e) {
  fixedHeaderWhenScroll();
});

},{}]},{},[1])

//# sourceMappingURL=header.min.js.map
