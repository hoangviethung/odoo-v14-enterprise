(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Tab = /*#__PURE__*/function () {
  function Tab(selector) {
    _classCallCheck(this, Tab);

    this.selector = document.querySelector(selector);

    if (this.selector) {
      this.navigationItems = Array.from(this.selector.querySelectorAll('[toggle-for]'));
      this.contentList = Array.from(this.selector.querySelectorAll('[tab-id]'));
      this.init();
    }
  }

  _createClass(Tab, [{
    key: "changeTabWhenClicked",
    value: function changeTabWhenClicked() {
      var _this = this;

      this.navigationItems.forEach(function (element, index) {
        element.addEventListener('click', function (e) {
          e.preventDefault();
          var tabTarget = element.attributes['toggle-for'].value;
          var targetDOM = Array.from(_this.selector.querySelectorAll("[tab-id='".concat(tabTarget, "']")));

          _this.navigationItems.forEach(function (eleClicked, eleClickedIndex) {
            if (eleClickedIndex != index) {
              eleClicked.classList.remove('active');
            }
          });

          _this.contentList.forEach(function (tabContentElement) {
            if (tabContentElement.attributes['tab-id'].value != tabTarget) {
              tabContentElement.style.display = 'none';
              tabContentElement.classList.remove('show');
            }
          });

          element.classList.add('active');
          targetDOM.forEach(function (item) {
            item.style.display = 'block';
          });
          setTimeout(function () {
            targetDOM.forEach(function (item) {
              item.classList.add('show');
            });
          }, 50);
        });
      });
    }
  }, {
    key: "activeFirstTab",
    value: function activeFirstTab() {
      if (this.navigationItems.length > 0) {
        this.navigationItems[0].click();
      }
    }
  }, {
    key: "init",
    value: function init() {
      this.changeTabWhenClicked();
      this.activeFirstTab();
    }
  }]);

  return Tab;
}();

exports.default = Tab;

},{}],2:[function(require,module,exports){
"use strict";

var _tabs = _interopRequireDefault(require("./libraries/tabs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var setValueCustomerSegment = function setValueCustomerSegment() {
  var wrapper = document.querySelector('.hvh-form-checkout');

  if (wrapper) {
    var items__tab = wrapper.querySelectorAll('.tab__list .item');
    items__tab.forEach(function (item) {
      item.addEventListener('click', function (e) {
        var nameTab = item.getAttribute('toggle-for');
        document.querySelector('#CustomerSegment').value = nameTab;
        validateFormCheckout();
      });
    });
  }
};

var isPhoneValid = function isPhoneValid(phone) {
  return /((09|03|07|08|05)+([0-9]{8})\b)/g.test(phone);
};

var isEmailValid = function isEmailValid(email) {
  var re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return re.test(String(email).toLowerCase());
};

var validateForm = function validateForm(item) {
  var name = item.getAttribute('name');
  var type = item.getAttribute('type');

  if (type == 'text' || type == 'tel' || type == 'email') {
    item.addEventListener('change', function (e) {
      if (name == 'name') {
        if (item.value.length >= 10) {
          item.setAttribute('valid', true);
        } else {
          item.setAttribute('valid', false);
        }
      }

      if (name == 'phone') {
        if (isPhoneValid(item.value)) {
          item.setAttribute('valid', true);
        } else {
          item.setAttribute('valid', false);
        }
      }

      if (name == 'email') {
        if (isEmailValid(item.value)) {
          item.setAttribute('valid', true);
        } else {
          item.setAttribute('valid', false);
        }
      }
    });
  }
};

var resetFormsCheckout = function resetFormsCheckout(input) {
  input.value = '';
  input.setAttribute('valid', 'waiting');
  document.querySelector('.hvh-payment .btn-primary').setAttribute('disable', 'disable');
};

var updateLinkActionFormCheckout = function updateLinkActionFormCheckout() {
  var payments = document.querySelectorAll('.hvh-payments input');
  payments.forEach(function (payment) {
    payment.addEventListener('change', function (e) {
      document.querySelector('.hvh-form-checkout form').setAttribute('action', payment.value);
    });
  });
};

var validateFormCheckout = function validateFormCheckout() {
  var forms = document.querySelectorAll('.hvh-form-checkout .block-form');
  forms.forEach(function (form) {
    var CustomerSegment = document.querySelector('#CustomerSegment');

    if (CustomerSegment) {
      if (form.getAttribute('tab-id') == CustomerSegment.value) {
        var itemsRequired = form.querySelectorAll('input[data-required]');
        itemsRequired.forEach(function (item) {
          validateForm(item);
          resetFormsCheckout(item);
        });
        form.addEventListener('change', function (e) {
          var itemsValid = form.querySelectorAll('input[valid=true]');

          if (itemsValid.length == itemsRequired.length) {
            form.querySelector('.btn-primary').removeAttribute('disable');
          } else {
            form.querySelector('.btn-primary').setAttribute('disable', 'disable');
          }
        });
      }
    }
  });
};

var validateFormLogin = function validateFormLogin() {
  var form = document.querySelector('.hvh-form-login form');

  if (form) {
    form.querySelector('button').setAttribute('disable', 'disable');
    var itemsRequired = form.querySelectorAll('input[data-required]');
    itemsRequired.forEach(function (item) {
      validateForm(item);
    });
    form.addEventListener('change', function (e) {
      var itemsValid = form.querySelectorAll('input[valid=true]');

      if (itemsValid.length == itemsRequired.length) {
        form.querySelector('.btn-primary').removeAttribute('disable');
      } else {
        form.querySelector('.btn-primary').setAttribute('disable', 'disable');
      }
    });
  }
};

window.addEventListener('load', function (e) {
  setValueCustomerSegment();
  updateLinkActionFormCheckout();
  var PricingBoard = new _tabs.default('.hvh-pricing-board .tab-container');
  var FormCheckout = new _tabs.default('.hvh-form-checkout .tab-container');
  validateFormCheckout();
  validateFormLogin();
});
window.addEventListener('scroll', function (e) {});
window.addEventListener('resize', function () {});

},{"./libraries/tabs":1}]},{},[2])

//# sourceMappingURL=main.min.js.map
